package springmvc.java.dao;

import java.util.List;

import org.springframework.data.repository.CrudRepository;

import springmvc.java.domain.BlogPost;
import springmvc.java.domain.User;

/**
 * The implementation of BlogPostDAO interface is not required
 * It is generated by Spring Data JPA Framework
 * This interface is responsible for CRUD + custom queries based on query methods and parameter
 * name and types
 */
public interface BlogPostDAO extends CrudRepository<BlogPost, Long>{
	
	//customized methods here 
	/**
	 * The implementation will be generated by Spring Data JPA API
	 * You don't need to fill method body.
	 * SQL Parameters will be resolved based on method parameters and name
	 * Like keyword in method body will be used in SQL statement 
	 * @param user
	 * @param title
	 * @return List<BlogPost>
	 */
	List<BlogPost> findAllBlogPostsByUserAndTitleContaining(User user, String title);
	
	
	/**
	 * Return a List<BlogPost> based on user and draft status
	 * @param user
	 * @param draft
	 * @return List<BlogPost>
	 */
	List<BlogPost> findAllBlogPostsByUserAndDraft(User user, boolean draft);
	
}
